{"version":3,"sources":["images/projectGallery/rx-java.png","images/projectGallery/android-testing.png","images/projectGallery/planet-express.png","images/projectGallery/mine-blast.png","images/projectGallery/robot-rampage.png","images/projectGallery/custom-views.png","images/projectGallery/militarium.png","images/projectGallery/salvage.gif","images/projectGallery/mothers-wrath.png","images/projectGallery/shattered-core.png","images/projectGallery/santa-cruzin.png","Header.js","Project.js","constants/SampleData.js","ProjectGallery.js","Profile.js","constants/Links.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","onClick","this","props","handleHomeClick","handleProfileClick","handleResumeClick","Component","Project","title","src","logo","SampleData","projects","rxJavaTalk","shortDescription","robot","mineShaft","planetExpress","android","shatteredCore","custom","militarium","mothersWrath","santaCruzin","salvage","ProjectGallery","map","item","src_Project","Profile","LINKS","TYPE","RESUME","App","state","showProjectGallery","showProfile","console","log","_this","setState","window","open","src_Header","src_ProjectGallery","src_Profile","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49b97ac6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rx-java.0fb5dc9e.png\";","module.exports = __webpack_public_path__ + \"static/media/android-testing.3074b65b.png\";","module.exports = __webpack_public_path__ + \"static/media/planet-express.6cb86232.png\";","module.exports = __webpack_public_path__ + \"static/media/mine-blast.5e0fc88b.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-rampage.49008917.png\";","module.exports = __webpack_public_path__ + \"static/media/custom-views.8b296f3f.png\";","module.exports = __webpack_public_path__ + \"static/media/militarium.2663126b.png\";","module.exports = __webpack_public_path__ + \"static/media/salvage.1075b042.gif\";","module.exports = __webpack_public_path__ + \"static/media/mothers-wrath.5d010597.png\";","module.exports = __webpack_public_path__ + \"static/media/shattered-core.afcb40e7.png\";","module.exports = __webpack_public_path__ + \"static/media/santa-cruzin.106c7e0d.png\";","import React, { Component } from 'react'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <div className='home' onClick={this.props.handleHomeClick}>\n            Home\n          </div>\n          <div className='profile' onClick={this.props.handleProfileClick}>\n            Profile\n          </div>\n          <div className='resume' onClick={this.props.handleResumeClick}>\n            Resume\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nclass Project extends Component {\n  render() {\n    return (\n      <div className='project'>\n        {this.props.title}\n        <img src={this.props.logo} />\n        {/* {this.props.shortDescription} */}\n      </div>\n    )\n  }\n}\n\nexport default Project\n","import rxJavaTalk from '../images/projectGallery/rx-java.png'\nimport android from '../images/projectGallery/android-testing.png'\nimport planetExpress from '../images/projectGallery/planet-express.png'\nimport mineShaft from '../images/projectGallery/mine-blast.png'\nimport robot from '../images/projectGallery/robot-rampage.png'\nimport custom from '../images/projectGallery/custom-views.png'\nimport militarium from '../images/projectGallery/militarium.png'\nimport salvage from '../images/projectGallery/salvage.gif'\nimport mothersWrath from '../images/projectGallery/mothers-wrath.png'\nimport shatteredCore from '../images/projectGallery/shattered-core.png'\nimport santaCruzin from '../images/projectGallery/santa-cruzin.png'\n\nconst SampleData = {\n  projects: [\n    {\n      logo: rxJavaTalk,\n      title: 'RxJava 2',\n      shortDescription:\n        'Lunch & Learn presentation about the basics and effectiveness of the Rx paradim.'\n    },\n    {\n      logo: robot,\n      title: 'Robot Rampage',\n      shortDescription:\n        'Defeat as many robots as possible within the time limit. Rise the ranks fo the leaderboard! Made in Unity.'\n    },\n    {\n      logo: mineShaft,\n      title: 'Mineshaft Explosion',\n      shortDescription:\n        'Wanna know what happens when a mineshaft blowsup? Watch and see! Made in Cinema4D.'\n    },\n    {\n      logo: planetExpress,\n      title: 'Planet Express',\n      shortDescription:\n        'Good news everyone! Planet Express HQ is now available in Low Poly Format. Made in Cinema4D.'\n    },\n    {\n      logo: android,\n      title: 'Demystifying Android',\n      shortDescription:\n        'An introduction to testing Android using Mockito and common concepts.'\n    },\n    {\n      logo: shatteredCore,\n      title: 'Shattered Core',\n      shortDescription:\n        'A mystical core rises from the ground controlling the warped water in this oasis. Made in Cinema4D.'\n    },\n    {\n      logo: custom,\n      title: 'Custom Views',\n      shortDescription:\n        \"Discover how to use Custom Views as an alternative to Android's Fragments.\"\n    },\n    {\n      logo: militarium,\n      title: 'Militarium',\n      shortDescription:\n        'GO inspired RTS made with a custom c++ engine and player achievement system.'\n    },\n    {\n      logo: mothersWrath,\n      title: \"Mother's Wrath\",\n      shortDescription:\n        'Play as Mother Earth who has risen to take back Earth from the clutches of humanity.'\n    },\n    {\n      logo: santaCruzin,\n      title: 'Santa Cruzin',\n      shortDescription:\n        'Descend the mountains of Santa Cruz in this 3D Kinect for Windows game. Made C#/XNA.'\n    },\n    {\n      logo: salvage,\n      title: 'Salvage',\n      shortDescription:\n        'Collect fuel cells and use space junk to defeat enemies. Made in GameMaker.'\n    }\n  ]\n}\n\nexport default SampleData\n","import React, { Component } from 'react'\nimport Project from './Project'\nimport SampleData from './constants/SampleData'\n\nclass ProjectGallery extends Component {\n  render() {\n    return (\n      <div className='gallery'>\n        {SampleData.projects.map(item => {\n          return (\n            <Project\n              title={item.title}\n              logo={item.logo}\n              shortDescription={item.shortDescription}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ProjectGallery\n","import React, { Component } from 'react'\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div>\n        <div className='profileText'>\n          This will be my profile page blah blah\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","const LINKS = {\n  TYPE: '_blank',\n  RESUME: 'http://chillbrodev.com/downloads/JonHoltanResume.pdf'\n}\n\nexport default LINKS\n","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './Header'\nimport ProjectGallery from './ProjectGallery'\nimport Profile from './Profile'\nimport LINKS from './constants/Links'\n\nclass App extends Component {\n  state = {\n    showProjectGallery: true,\n    showProfile: false\n  }\n\n  handleHomeClick = () => {\n    console.log('Home was clicked')\n    this.setState({\n      showProjectGallery: true,\n      showProfile: false\n    })\n  }\n\n  handleProfileClick = () => {\n    console.log('Profile was clicked')\n    this.setState({\n      showProjectGallery: false,\n      showProfile: true\n    })\n  }\n\n  handleResumeClick = () => {\n    console.log('Resume was clicked')\n    window.open(LINKS.RESUME, LINKS.TYPE)\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          handleHomeClick={this.handleHomeClick}\n          handleProfileClick={this.handleProfileClick}\n          handleResumeClick={this.handleResumeClick}\n        />\n        {this.state.showProjectGallery && <ProjectGallery />}\n        {this.state.showProfile && <Profile />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}