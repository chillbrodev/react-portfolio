{"version":3,"sources":["images/projectGallery/rxJava.png","images/projectGallery/androidTesting.png","images/projectGallery/planetExpress.png","images/projectGallery/mineBlast.png","images/projectGallery/robotRampage.png","images/projectGallery/customViews.png","images/projectGallery/militarium.png","images/projectGallery/salvage.png","images/projectGallery/mothersWrath.png","images/projectGallery/shatteredCore.png","images/projectGallery/santaCruzin.png","images/projectGallery/troupe.png","images/projectGallery/iHeartRadio.png","images/projectGallery/aaaLogo.png","images/projectGallery/wonderland.png","Header.js","constants/Icons.js","ProjectModal.js","Project.js","constants/SampleData.js","ProjectGallery.js","Profile.js","constants/Links.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","onClick","this","props","handleHomeClick","handleProfileClick","handleResumeClick","Component","Icons","Android","Tv","Voice","Game","Talk","Art","Close","ProjectModal","lib_default","style","overlay","backgroundColor","content","border","background","isOpen","showModal","contentLabel","class","icons","handleCloseModal","title","map","icon","shortDescription","react_responsive_carousel_lib","autoPlay","infiniteLoop","images","image","src","sourceUrl","legend","Project","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleOpenModal","bind","assertThisInitialized","event","setState","preventDefault","src_ProjectModal","logo","SampleData","projects","iheartRadio","tags","wonderland","android","robot","troupeAi","rxJavaTalk","AAA","mineShaft","planetExpress","shatteredCore","custom","militarium","santaCruzin","mothersWrath","salvage","ProjectGallery","item","src_Project","Profile","LINKS","TYPE","RESUME","App","showProjectGallery","showProfile","console","log","window","open","src_Header","src_ProjectGallery","src_Profile","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","ReactModal","setAppElement","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e264e5b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rxJava.2e798c90.png\";","module.exports = __webpack_public_path__ + \"static/media/androidTesting.6abfd1ec.png\";","module.exports = __webpack_public_path__ + \"static/media/planetExpress.61222628.png\";","module.exports = __webpack_public_path__ + \"static/media/mineBlast.7a23302c.png\";","module.exports = __webpack_public_path__ + \"static/media/robotRampage.32413c35.png\";","module.exports = __webpack_public_path__ + \"static/media/customViews.7a954f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/militarium.99324417.png\";","module.exports = __webpack_public_path__ + \"static/media/salvage.5b3377ae.png\";","module.exports = __webpack_public_path__ + \"static/media/mothersWrath.af6f6282.png\";","module.exports = __webpack_public_path__ + \"static/media/shatteredCore.16f4726d.png\";","module.exports = __webpack_public_path__ + \"static/media/santaCruzin.c5df089f.png\";","module.exports = __webpack_public_path__ + \"static/media/troupe.468a1a28.png\";","module.exports = __webpack_public_path__ + \"static/media/iHeartRadio.1f30886f.png\";","module.exports = __webpack_public_path__ + \"static/media/aaaLogo.8d7609ce.png\";","module.exports = __webpack_public_path__ + \"static/media/wonderland.5e4800aa.png\";","import React, { Component } from 'react'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <div className='home' onClick={this.props.handleHomeClick}>\n            Home\n          </div>\n          <div className='profile' onClick={this.props.handleProfileClick}>\n            Profile\n          </div>\n          <div className='resume' onClick={this.props.handleResumeClick}>\n            Resume\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","const Icons = {\n  Android: 'fab fa-android',\n  Tv: 'fas fa-tv',\n  Voice: 'fas fa-microphone-alt',\n  Game: 'fas fa-gamepad',\n  Talk: 'fas fa-chalkboard-teacher',\n  Art: 'fas fa-paint-brush',\n  Close: 'fas fa-times-circle fa-2x closeIconColor'\n}\n\nexport default Icons\n","import React, { Component } from 'react'\nimport ReactModal from 'react-modal'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport { Carousel } from 'react-responsive-carousel'\nimport icons from './constants/Icons'\n\nclass ProjectModal extends Component {\n  render() {\n    return (\n      <div>\n        <ReactModal\n          style={{\n            overlay: {\n              backgroundColor: 'rgba(29, 30, 34, 0.75)'\n            },\n            content: {\n              border: '2px solid #ccc',\n              background: '#1d1e22'\n            }\n          }}\n          isOpen={this.props.showModal}\n          contentLabel='Minimal Modal Example'\n        >\n          <i class={icons.Close} onClick={this.props.handleCloseModal} />\n          <div className='project-modal'>\n            <h3>{this.props.title}</h3>\n            <div className='modal-icons'>\n              {this.props.icons.map(icon => (\n                <i class={icon} />\n              ))}\n            </div>\n            <div className='modal-desc'>\n              {this.props.shortDescription}\n              <p />\n              <Carousel autoPlay={true} infiniteLoop={true}>\n                {this.props.images.map(image => {\n                  return (\n                    <div>\n                      <img src={image.sourceUrl} />\n                      <p className='legend'>{image.legend}</p>\n                    </div>\n                  )\n                })}\n              </Carousel>\n            </div>\n          </div>\n        </ReactModal>\n      </div>\n    )\n  }\n}\n\nexport default ProjectModal\n","import React, { Component } from 'react'\nimport ProjectModal from './ProjectModal'\n\nclass Project extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showModal: false\n    }\n    this.handleOpenModal = this.handleOpenModal.bind(this)\n    this.handleCloseModal = this.handleCloseModal.bind(this)\n  }\n\n  handleOpenModal(event) {\n    this.setState({ showModal: true })\n    event.preventDefault()\n  }\n\n  handleCloseModal(event) {\n    this.setState({ showModal: false })\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <div>\n        <ProjectModal\n          handleCloseModal={this.handleCloseModal}\n          title={this.props.title}\n          icons={this.props.icons}\n          shortDescription={this.props.shortDescription}\n          showModal={this.state.showModal}\n          images={this.props.images}\n        />\n        {!this.state.showModal && (\n          <div className='project' onClick={this.handleOpenModal}>\n            <div className='project-title'>{this.props.title}</div>\n            <img className='project-img' src={this.props.logo} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Project\n","import rxJavaTalk from '../images/projectGallery/rxJava.png'\nimport android from '../images/projectGallery/androidTesting.png'\nimport planetExpress from '../images/projectGallery/planetExpress.png'\nimport mineShaft from '../images/projectGallery/mineBlast.png'\nimport robot from '../images/projectGallery/robotRampage.png'\nimport custom from '../images/projectGallery/customViews.png'\nimport militarium from '../images/projectGallery/militarium.png'\nimport salvage from '../images/projectGallery/salvage.png'\nimport mothersWrath from '../images/projectGallery/mothersWrath.png'\nimport shatteredCore from '../images/projectGallery/shatteredCore.png'\nimport santaCruzin from '../images/projectGallery/santaCruzin.png'\nimport troupeAi from '../images/projectGallery/troupe.png'\nimport iheartRadio from '../images/projectGallery/iHeartRadio.png'\nimport AAA from '../images/projectGallery/aaaLogo.png'\nimport wonderland from '../images/projectGallery/wonderland.png'\nimport icons from './Icons'\n\nconst SampleData = {\n  projects: [\n    {\n      logo: iheartRadio,\n      title: 'iHeart Radio TV',\n      tags: ['android', 'tv'],\n      icons: [icons.Android, icons.Tv],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        \"Utilized modern Android practices and Kotlin to overhaul the OTT experience for iHeartRadio. This project was built as a main codebase which used Android's Product Flavors to seperate FireTV & AndroidTV requirements. The team was able to deploy to both platforms with ease. Both apps have a 4.0+ rating on their respective store.\"\n    },\n    {\n      logo: wonderland,\n      title: \"Wonderland Queen's Revenge\",\n      tags: ['voice', 'game'],\n      icons: [icons.Voice, icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        \"Developed using AWS Lambda, Node.JS and Alexa Presentation Language (APL). This is an interactive voice game built for the Echo Show. The project was built in two weeks and was submitted to the DevPost Hackathon. Can you help the white rabbit break free of the Queen's evil magic? \"\n    },\n    {\n      logo: android,\n      title: 'Demystifying Android Testing',\n      tags: ['android', 'talk'],\n      icons: [icons.Android, icons.Talk],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'I gave a talk to the Orange County Android Meetup about writing unit tests. This talk broke down common terminology and showcased how to write tests using Java and Mockito.'\n    },\n    {\n      logo: robot,\n      title: 'Robot Rampage',\n      tags: ['game'],\n      icons: [icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        \"Robot Rampage started as a Unity tutorial from Ray Wenderlich's Unity Games by Tutorials book. Upon completetion of the tutorial I went ahead and fixed some bugs, added additional features and included a leaderboard. This gave the game a more polished feel and allowed players to compete against each other. The game can be described as a time based shooter where players must defeat as many robots as possible within the time limit.\"\n    },\n    {\n      logo: troupeAi,\n      title: 'Troupe.ai',\n      tags: ['android'],\n      icons: [icons.Android],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'Troüpe is an AI platform that is creating meaningful people to people connections. I was taked with building the beta application in two short weeks. I used Kotlin, Retrofit2, RxJava, and Twilio to rapidly develop the application. Attendees of TedX Toronto utilized this application to converse and network during the conference.'\n    },\n    {\n      logo: rxJavaTalk,\n      title: 'RxJava 2: Reactive Revolution',\n      tags: ['talk', 'android'],\n      icons: [icons.Android, icons.Talk],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'Reactive programming is a  paradim in which the application reacts to events triggered in your application via users or other systems. RxJava allows developers to create fully fledged reactive applications. I gave a Lunch and Learn about the basics of Rx* and showcased how to use Rx in Kotlin applications.'\n    },\n    {\n      logo: AAA,\n      title: 'AAA Android',\n      tags: ['android'],\n      icons: [icons.Android],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'During a digital transformation engagement with AAA I was responsible for teaching Android and showcasing modern development practices. I also taught the engineers how to use modern libraries/frameworks such as MVP, RxJava2, Retrofit2 & Dagger2. We used Pair Programming and TDD to revamp their application and deploy major updates.'\n    },\n    {\n      logo: mineShaft,\n      title: 'Mineshaft Explosion',\n      tags: ['3D'],\n      icons: [icons.Art],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'I utilized a tutorial from the folks at Greyscale Gorilla to create my very first motion graphic. This amazing tutorial showcases how to build a mineshaft explosion using dynamics, animations, texturing and modeling techniques.'\n    },\n    {\n      logo: planetExpress,\n      title: 'Planet Express',\n      tags: ['3D'],\n      icons: [icons.Art],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'After creating my first motion graphic, I wanted to explore low poly modeling. My favorite show is Futurama and I decided to recreate the Planet Express HQ. This is my first 3D model made using various reference images.'\n    },\n    {\n      logo: shatteredCore,\n      title: 'Shattered Core',\n      tags: ['3D'],\n      icons: [icons.Art],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'I crafted a simplistic motion graphic using the low poly style. I created an oasis environment that showcases a mystical core that rises above the ground thus controlling the shattered water.'\n    },\n    {\n      logo: custom,\n      title: 'Custom Views: No Fragments',\n      tags: ['talk', 'android'],\n      icons: [icons.Android, icons.Talk],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'My first talk at the Orange County Android Meetup focused on using custom views as an alternative to Fragments. I wanted to show others that is possible to create a fully fledged system using custom views instead of the standard of Fragments. I constructed this system while builing a custom multimedia application.'\n    },\n    {\n      logo: militarium,\n      title: 'Militarium',\n      tags: ['game'],\n      icons: [icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'For my senior thesis, my team and I made history at UC Santa Cruz by being the first team to create a custom engine and a real time strategy game. We created Militarium which is heavily influnced by the ancient Chinese game Go. Militarium featured a player profile and achievement system. Militarium won the Peer choice award at the UCSC Sammy Awards.'\n    },\n    {\n      logo: santaCruzin,\n      title: 'Santa Cruzin',\n      tags: ['game'],\n      icons: [icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'Santa Cruzin 3D Kinect was built in two weeks with a team of four using C#/XNA. Santa Cruzin won peer choice award at the UCSC Sammy Awards. We utilized text files to describe the height maps of each level. These files were loaded and used to generate 3D terrain. The game features both single and multiplayer experiences.'\n    },\n    {\n      logo: mothersWrath,\n      title: \"Mother's Wrath\",\n      tags: ['game'],\n      icons: [icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        \"Mother's Wrath is a single player top down action game where you play as Mother Earth and are trying to take back the Earth from the evil clutches of humanity. Mother's Wrath was built in C#/XNA using advanced AI systems to provide squad style behavior for enemies and an engaging multiphase final boss fight. We built this game in about five weeks, creating all art, effects and sounds from scratch. This game is playable on Windows with an Xbox Gamepad.\"\n    },\n    {\n      logo: salvage,\n      title: 'Salvage',\n      tags: ['game'],\n      icons: [icons.Game],\n      images: [\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        },\n        {\n          sourceUrl: 'http://placehold.it/1000x400/ffffff/c0392b/&text=slide1',\n          legend: 'legend 1'\n        }\n      ],\n      shortDescription:\n        'Salavage is a game where you must collect fuel cells and use space junk to defeat enemies. It was made in GameMaker in about five weeks. It was the first game I ever made. I focused on level design, UI and QA. Salavage placed first in the internal class competiton.'\n    }\n  ]\n}\n\nexport default SampleData\n","import React, { Component } from 'react'\nimport Project from './Project'\nimport SampleData from './constants/SampleData'\n\nclass ProjectGallery extends Component {\n  render() {\n    return (\n      <div className='gallery'>\n        {SampleData.projects.map(item => {\n          return (\n            <Project\n              title={item.title}\n              logo={item.logo}\n              shortDescription={item.shortDescription}\n              icons={item.icons}\n              images={item.images}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ProjectGallery\n","import React, { Component } from 'react'\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div>\n        <div className='profileText'>\n          Jon found his passion for programming while studying game development\n          at UC Santa Cruz. Currently Jon is seeking new opportunites in Android\n          and Serverless technologies. He previously worked at TribalScale\n          Orange County as an Agile Software Engineer, where he spent his time\n          building bleeding-edge applications for the biggest brands, teaching\n          Android, and exploring the latest trends in tech. Outside of work, he\n          enjoys cooking delicious meals, 3D modeling, hiking in the wilderness\n          and developing side projects.\n          <p>Email: jon@chillbrodev.com</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","const LINKS = {\n  TYPE: '_blank',\n  RESUME: 'http://chillbrodev.com/downloads/JonHoltanResume.pdf'\n}\n\nexport default LINKS\n","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './Header'\nimport ProjectGallery from './ProjectGallery'\nimport Profile from './Profile'\nimport LINKS from './constants/Links'\n\nclass App extends Component {\n  state = {\n    showProjectGallery: true,\n    showProfile: false\n  }\n\n  handleHomeClick = () => {\n    console.log('Home was clicked')\n    this.setState({\n      showProjectGallery: true,\n      showProfile: false\n    })\n  }\n\n  handleProfileClick = () => {\n    console.log('Profile was clicked')\n    this.setState({\n      showProjectGallery: false,\n      showProfile: true\n    })\n  }\n\n  handleResumeClick = () => {\n    console.log('Resume was clicked')\n    window.open(LINKS.RESUME, LINKS.TYPE)\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          handleHomeClick={this.handleHomeClick}\n          handleProfileClick={this.handleProfileClick}\n          handleResumeClick={this.handleResumeClick}\n        />\n        {this.state.showProjectGallery && <ProjectGallery />}\n        {this.state.showProfile && <Profile />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactModal from 'react-modal'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nReactModal.setAppElement('#root')\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}